<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxght="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal"
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
                    xmlns:oem="clr-namespace:OEMFDTContainer.Application.Infrastructure.OEM"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2013.v13.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/Brushes.xaml" />
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2013.v13.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/SharedResources.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <dxg:SummaryToTextConverter x:Key="SummaryToTextConverter" />
    <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterInverted" Invert="True" />

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=BorderTemplate, ThemeName=Office2013}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="combobox_container"
              Width="Auto"
              Height="Auto">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="InternalFocusStates">
                    <VisualState x:Name="InternalFocused">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="FocusedElement"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InternalUnfocused">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="FocusedElement"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!--  change regular border here  -->
            <Border x:Name="TextEditBorder"
                    Margin="0,0,0,0"
                    Padding="0">
                <Grid Width="Auto"
                      Height="Auto"
                      SnapsToDevicePixels="False">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="5" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Border x:Name="content"
                            Grid.RowSpan="2"
                            Margin="0,0,0,0"
                            Background="{x:Null}"
                            BorderBrush="{DynamicResource DefaultBorderBrush}"
                            BorderThickness="1"
                            Opacity="1"
                            Padding="0,0,0,0">
                        <ContentPresenter />
                    </Border>
                </Grid>
            </Border>
            <!--  change focused border here  -->
            <Border x:Name="FocusedElement"
                    BorderThickness="2"
                    Opacity="0" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{dxet:SearchControlThemeKey ResourceKey=CloseButtonStyle, ThemeName=Office2013}" TargetType="{x:Type Button}">
        <Setter Property="Content" Value="Close" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            Background="{DynamicResource DefaultControlBackgroundBrush}"
                            BorderBrush="{DynamicResource DefaultBorderBrush}"
                            BorderThickness="1">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--
                            <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                            <Storyboard TargetName="Border">
                            <ColorAnimation Duration="0"
                            From="{DynamicResource {x:Static oem:DefaultStyle.CommandButtonDefaultBackgroundColor}}"
                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                            To="{DynamicResource {x:Static oem:DefaultStyle.CommandButtonMouseOverBackgroundColor}}" />
                            </Storyboard>
                            </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                            <Storyboard TargetName="Border">
                            <ColorAnimation Duration="0"
                            From="{DynamicResource {x:Static oem:DefaultStyle.CommandButtonMouseOverBackgroundColor}}"
                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                            To="{DynamicResource {x:Static oem:DefaultStyle.CommandButtonDefaultBackgroundColor}}" />
                            </Storyboard>
                            </BeginStoryboard>
                            </EventTrigger>
                        -->


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>